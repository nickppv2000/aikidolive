@page
@model AikidoLive.Pages.Account.LoginModel
@{
    ViewData["Title"] = "Login";
}

<div class="auth-container">
    <div class="auth-box">
        <h1>Login</h1>

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-danger" role="alert">
                @Model.ErrorMessage
            </div>
        }

        <form method="post">
            <div class="form-group">
                <label asp-for="LoginInput.Email">Email</label>
                <input asp-for="LoginInput.Email" class="form-control" />
                <span asp-validation-for="LoginInput.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LoginInput.Password">Password</label>
                <input asp-for="LoginInput.Password" class="form-control" type="password" />
                <span asp-validation-for="LoginInput.Password" class="text-danger"></span>
            </div>
            <div class="form-check mb-3">
                <input asp-for="LoginInput.RememberMe" class="form-check-input" type="checkbox" />
                <label asp-for="LoginInput.RememberMe" class="form-check-label">Remember me</label>
            </div>
            <button type="submit" class="btn btn-primary btn-block">Login</button>
        </form>

        <div class="auth-links">
            <p><a asp-page="/Account/ForgotPassword">Forgot your password?</a></p>
            <p>Don't have an account? <a asp-page="/Account/Register">Register</a></p>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}