@page
@model AikidoLive.Pages.Account.ResetPasswordModel
@{
    ViewData["Title"] = "Reset Password";
}

<div class="auth-container">
    <div class="auth-box">
        <h1>üîê Reset Password</h1>
        
        @if (!string.IsNullOrEmpty(Model.Message))
        {
            <div class="alert @(Model.IsSuccess ? "alert-success" : "alert-danger")" role="alert">
                @Model.Message
            </div>
        }
        
        @if (Model.IsSuccess)
        {
            <div class="text-center">
                <a asp-page="/Account/Login" class="btn btn-primary">Login Now</a>
            </div>
        }
        else if (!string.IsNullOrEmpty(Model.Input.Token))
        {
            <form method="post">
                <input asp-for="Input.Token" type="hidden" />
                
                <div class="form-group">
                    <label asp-for="Input.NewPassword">New Password</label>
                    <input asp-for="Input.NewPassword" class="form-control" type="password" />
                    <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
                </div>
                
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" type="password" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                
                <button type="submit" class="btn btn-primary btn-block">Reset Password</button>
            </form>
        }
        
        <div class="auth-links">
            <p><a asp-page="/Account/Login">Back to Login</a></p>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}