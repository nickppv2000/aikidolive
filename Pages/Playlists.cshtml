@page
@model AikidoLive.Pages.Playlists
@{
    ViewData["Title"] = "Playlists";
}

<div class="hero-section" style="padding: 2rem 0;">
    <h1 class="hero-title fade-in-up">ðŸŽµ Training Playlists</h1>
    <p class="hero-subtitle fade-in-up-delay">Curated collections of Aikido training content for focused learning</p>
</div>

@if (null != Model._playlistsDocuments)
{
    <div class="library-grid">
        @{
            var settings = new Newtonsoft.Json.JsonSerializerSettings { Formatting = Newtonsoft.Json.Formatting.None };
        }
        @foreach (var docs in Model._playlistsDocuments)
        {
            @foreach (var content in docs.PlaylistsContents)
            {
                <div class="playlist-tile library-item library-item-clickable fade-in-up" 
                     data-playlist-name="@content.PlaylistName" 
                     data-tracks="@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(content.Tracks, settings).Replace("\"", "&quot;"))">
                    <h3 class="card-title">ðŸŽµ @content.PlaylistName</h3>
                    <div class="card-content">
                        <p class="playlist-track-count">@content.Tracks.Count() tracks</p>
                        <div class="playlist-preview">
                            @if (content.Tracks.Any())
                            {
                                <p class="preview-text">Featured: @content.Tracks.First().Name</p>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    
    <!-- Modal for playlist tracks -->
    <div id="playlistModal" class="modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="modalPlaylistTitle">Playlist Tracks</h3>
                <span class="close" onclick="closePlaylistModal()">&times;</span>
            </div>
            <div class="modal-body">
                <ul id="modalTrackList" class="track-list"></ul>
            </div>
        </div>
    </div>
}
else
{
    <div class="card">
        <div class="card-content" style="text-align: center;">
            <h3>ðŸŽµ No Playlists Available</h3>
            <p>Training playlists are currently being organized. Please check back soon for new content.</p>
            <a href="/" class="btn btn-primary">Return to Home</a>
        </div>
    </div>
}


<script>
    function showPlaylistTracks(playlistName, tracksJson) {
        var modal = document.getElementById('playlistModal');
        var modalTitle = document.getElementById('modalPlaylistTitle');
        var trackList = document.getElementById('modalTrackList');
        
        try {
            var tracks = JSON.parse(tracksJson);
            
            // Update modal title
            modalTitle.textContent = `ðŸŽµ ${playlistName}`;
            
            // Clear existing tracks
            trackList.innerHTML = '';
            
            // Add tracks with modern styling
            tracks.forEach((track, index) => {
                var li = document.createElement('li');
                li.className = 'track-item';
                li.style.animationDelay = `${index * 0.1}s`;
                
                var a = document.createElement('a');
                a.href = track.Url;
                a.className = 'track-link';
                a.textContent = track.Name;
                a.target = '_blank';
                
                li.appendChild(a);
                trackList.appendChild(li);
            });
            
            // Show the modal
            modal.style.display = 'block';
            modal.classList.add('fade-in-up');
            
        } catch (error) {
            console.error('Error parsing tracks data:', error);
            console.error('Playlist name:', playlistName);
            console.error('Tracks JSON:', tracksJson);
        }
    }
    
    function closePlaylistModal() {
        var modal = document.getElementById('playlistModal');
        modal.style.display = 'none';
    }
    
    // Initialize event listeners when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
        // Add click listeners to playlist tiles
        var playlistTiles = document.querySelectorAll('.playlist-tile');
        playlistTiles.forEach(function(tile) {
            tile.addEventListener('click', function() {
                var playlistName = this.getAttribute('data-playlist-name');
                var tracksData = this.getAttribute('data-tracks');
                
                if (playlistName && tracksData) {
                    showPlaylistTracks(playlistName, tracksData);
                }
            });
        });
    });
    
    // Close modal when clicking outside of it
    window.onclick = function(event) {
        var modal = document.getElementById('playlistModal');
        if (event.target == modal) {
            closePlaylistModal();
        }
    }
</script>